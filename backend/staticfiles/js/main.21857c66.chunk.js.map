{"version":3,"sources":["constants/courseConstants.js","constants/userConstants.js","constants/scheduleConstants.js","store.js","reducers/courseReducers.js","reducers/userReducers.js","reducers/scheduleReducers.js","reducers/scheduleCreateReducer.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Difficulty.js","components/Course.js","components/Loader.js","components/Message.js","actions/courseActions.js","components/CourseCarousel.js","screens/HomeScreen.js","screens/CourseScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/scheduleCreateActions.js","actions/scheduleActions.js","screens/ScheduleScreen.js","components/SchedulingSteps.js","screens/AttendanceScreen.js","screens/ConfirmationScreen.js","screens/ScheduleDetailsScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/CourseListScreen.js","screens/CourseEditScreen.js","screens/ScheduleListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["COURSE_LIST_REQUEST","COURSE_LIST_SUCCESS","COURSE_LIST_FAIL","COURSE_DETAILS_REQUEST","COURSE_DETAILS_SUCCESS","COURSE_DETAILS_FAIL","COURSE_DELETE_REQUEST","COURSE_DELETE_SUCCESS","COURSE_DELETE_FAIL","COURSE_CREATE_REQUEST","COURSE_CREATE_SUCCESS","COURSE_CREATE_FAIL","COURSE_CREATE_RESET","COURSE_UPDATE_REQUEST","COURSE_UPDATE_SUCCESS","COURSE_UPDATE_FAIL","COURSE_UPDATE_RESET","COURSE_CREATE_COMMENT_REQUEST","COURSE_CREATE_COMMENT_SUCCESS","COURSE_CREATE_COMMENT_FAIL","COURSE_CREATE_COMMENT_RESET","COURSE_TOP_REQUEST","COURSE_TOP_SUCCESS","COURSE_TOP_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","SCHEDULE_ADD_LECTURE","SCHEDULE_REMOVE_LECTURE","SCHEDULE_SAVE_ATTENDANCE_PREFERENCE","SCHEDULE_CLEAR_LECTURES","SCHEDULE_CREATE_REQUEST","SCHEDULE_CREATE_SUCCESS","SCHEDULE_CREATE_FAIL","SCHEDULE_CREATE_RESET","SCHEDULE_DETAILS_REQUEST","SCHEDULE_DETAILS_SUCCESS","SCHEDULE_DETAILS_FAIL","SCHEDULE_LIST_MY_REQUEST","SCHEDULE_LIST_MY_SUCCESS","SCHEDULE_LIST_MY_FAIL","SCHEDULE_LIST_MY_RESET","SCHEDULE_LIST_REQUEST","SCHEDULE_LIST_SUCCESS","SCHEDULE_LIST_FAIL","SCHEDULE_ATTEND_REQUEST","SCHEDULE_ATTEND_SUCCESS","SCHEDULE_ATTEND_FAIL","SCHEDULE_ATTEND_RESET","reducer","combineReducers","courseList","state","courses","action","type","loading","payload","error","userLogin","userInfo","courseDetails","course","comments","courseDelete","success","courseCreate","courseUpdate","courseCommentCreate","courseTopOnes","schedule","scheduledLectures","attendancePreference","lecture","existLecture","find","x","map","filter","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","scheduleCreate","myschedule","scheduleDetails","lectures","scheduleListMy","schedules","scheduleList","scheduleAttend","scheduledLecturesFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","navigate","useNavigate","Form","onSubmit","e","preventDefault","window","location","pathname","className","Control","name","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Toggle","Collapse","Nav","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Difficulty","text","color","style","Course","Card","_id","Img","src","image","Body","textDecoration","Title","as","Text","difficulty","numComments","tutor","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","listCourses","listCourseDetails","CourseCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","useLocation","search","console","log","sm","md","lg","xl","padding","CourseScreen","lecs","setLecs","setDifficulty","content","setContent","params","useParams","successCourseComment","loadingCourseComment","errorCourseComment","ListGroup","description","lecturesScheduled","xs","Array","keys","disabled","length","comment","createdAt","substring","courseId","post","Group","controlId","Label","row","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","split","setItem","stringify","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingSchedules","errorSchedules","put","updateUserProfile","Table","striped","responsive","isAttended","addToSchedule","ScheduleScreen","Number","removeFromScheduleHandler","removeFromSchedule","lec","rounded","SchedulingSteps","step1","step2","step3","AttendanceScreen","attendOffline","setattendOffline","partiallyVaccinated","setpartiallyVaccinated","firstDoseAt","setfirstDoseAt","fullyVaccinated","setfullyVaccinated","secondDoseAt","setsecondDoseAt","Check","inline","label","checked","ConfirmationScreen","index","createSchedule","ScheduleDetailsScreen","scheduleId","loadingAttend","successAttend","isOutdated","href","Authorization","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","CourseListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdCourse","deleteCourse","CourseEditScreen","setTutor","setDescription","setLecturesScheduled","setImage","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateCourse","custom","ScheduleListScreen","App","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21857c66.chunk.js","sourcesContent":["export const COURSE_LIST_REQUEST = 'COURSE_LIST_REQUEST'\r\nexport const COURSE_LIST_SUCCESS = 'COURSE_LIST_SUCCESS'\r\nexport const COURSE_LIST_FAIL = 'COURSE_LIST_FAIL'\r\n\r\nexport const COURSE_DETAILS_REQUEST = 'COURSE_DETAILS_REQUEST'\r\nexport const COURSE_DETAILS_SUCCESS = 'COURSE_DETAILS_SUCCESS'\r\nexport const COURSE_DETAILS_FAIL = 'COURSE_DETAILS_FAIL'\r\n\r\nexport const COURSE_DELETE_REQUEST = 'COURSE_DELETE_REQUEST'\r\nexport const COURSE_DELETE_SUCCESS = 'COURSE_DELETE_SUCCESS'\r\nexport const COURSE_DELETE_FAIL = 'COURSE_DELETE_FAIL'\r\n\r\nexport const COURSE_CREATE_REQUEST = 'COURSE_CREATE_REQUEST'\r\nexport const COURSE_CREATE_SUCCESS = 'COURSE_CREATE_SUCCESS'\r\nexport const COURSE_CREATE_FAIL = 'COURSE_CREATE_FAIL'\r\nexport const COURSE_CREATE_RESET = 'COURSE_CREATE_RESET'\r\n\r\nexport const COURSE_UPDATE_REQUEST = 'COURSE_UPDATE_REQUEST'\r\nexport const COURSE_UPDATE_SUCCESS = 'COURSE_UPDATE_SUCCESS'\r\nexport const COURSE_UPDATE_FAIL = 'COURSE_UPDATE_FAIL'\r\nexport const COURSE_UPDATE_RESET = 'COURSE_UPDATE_RESET'\r\n\r\nexport const COURSE_CREATE_COMMENT_REQUEST = 'COURSE_CREATE_COMMENT_REQUEST'\r\nexport const COURSE_CREATE_COMMENT_SUCCESS = 'COURSE_CREATE_COMMENT_SUCCESS'\r\nexport const COURSE_CREATE_COMMENT_FAIL = 'COURSE_CREATE_COMMENT_FAIL'\r\nexport const COURSE_CREATE_COMMENT_RESET = 'COURSE_CREATE_COMMENT_RESET'\r\n\r\nexport const COURSE_TOP_REQUEST = 'COURSE_TOP_REQUEST'\r\nexport const COURSE_TOP_SUCCESS = 'COURSE_TOP_SUCCESS'\r\nexport const COURSE_TOP_FAIL = 'COURSE_TOP_FAIL'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const SCHEDULE_ADD_LECTURE = 'SCHEDULE_ADD_LECTURE'\r\nexport const SCHEDULE_REMOVE_LECTURE = 'SCHEDULE_REMOVE_LECTURE'\r\n\r\nexport const SCHEDULE_SAVE_ATTENDANCE_PREFERENCE = 'SCHEDULE_SAVE_ATTENDANCE_PREFERENCE'\r\nexport const SCHEDULE_CLEAR_LECTURES = 'SCHEDULE_CLEAR_LECTURES'\r\n\r\n// My Schedule\r\nexport const SCHEDULE_CREATE_REQUEST = 'SCHEDULE_CREATE_REQUEST'\r\nexport const SCHEDULE_CREATE_SUCCESS = 'SCHEDULE_CREATE_SUCCESS'\r\nexport const SCHEDULE_CREATE_FAIL = 'SCHEDULE_CREATE_FAIL'\r\nexport const SCHEDULE_CREATE_RESET = 'SCHEDULE_CREATE_RESET'\r\n\r\nexport const SCHEDULE_DETAILS_REQUEST = 'SCHEDULE_DETAILS_REQUEST'\r\nexport const SCHEDULE_DETAILS_SUCCESS = 'SCHEDULE_DETAILS_SUCCESS'\r\nexport const SCHEDULE_DETAILS_FAIL = 'SCHEDULE_DETAILS_FAIL'\r\n\r\nexport const SCHEDULE_LIST_MY_REQUEST = 'SCHEDULE_LIST_MY_REQUEST'\r\nexport const SCHEDULE_LIST_MY_SUCCESS = 'SCHEDULE_LIST_MY_SUCCESS'\r\nexport const SCHEDULE_LIST_MY_FAIL = 'SCHEDULE_LIST_MY_FAIL'\r\nexport const SCHEDULE_LIST_MY_RESET = 'SCHEDULE_LIST_MY_RESET'\r\n\r\nexport const SCHEDULE_LIST_REQUEST = 'SCHEDULE_LIST_REQUEST'\r\nexport const SCHEDULE_LIST_SUCCESS = 'SCHEDULE_LIST_SUCCESS'\r\nexport const SCHEDULE_LIST_FAIL = 'SCHEDULE_LIST_FAIL'\r\n\r\nexport const SCHEDULE_ATTEND_REQUEST = 'SCHEDULE_ATTEND_REQUEST'\r\nexport const SCHEDULE_ATTEND_SUCCESS = 'SCHEDULE_ATTEND_SUCCESS'\r\nexport const SCHEDULE_ATTEND_FAIL = 'SCHEDULE_ATTEND_FAIL'\r\nexport const SCHEDULE_ATTEND_RESET = 'SCHEDULE_ATTEND_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    courseListReducer, \r\n    courseDetailsReducer, \r\n    courseDeleteReducer, \r\n    courseCreateReducer,\r\n    courseUpdateReducer,\r\n    courseCommentCreateReducer, \r\n    courseTopOnesReducer,\r\n} from './reducers/courseReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer, \r\n    userListReducer, \r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport { scheduleReducer } from './reducers/scheduleReducers'\r\nimport { \r\n    scheduleCreateReducer, \r\n    scheduleDetailsReducer, \r\n    scheduleListMyReducer,\r\n    scheduleListReducer, \r\n    scheduleAttendReducer,\r\n} from './reducers/scheduleCreateReducer'\r\n\r\nconst reducer = combineReducers({\r\n    courseList: courseListReducer,\r\n    userLogin: userLoginReducer,\r\n    \r\n    courseDetails: courseDetailsReducer,\r\n    courseDelete: courseDeleteReducer,\r\n    courseCreate: courseCreateReducer,\r\n    courseUpdate: courseUpdateReducer,\r\n    courseCommentCreate: courseCommentCreateReducer,\r\n    courseTopOnes: courseTopOnesReducer,\r\n    schedule: scheduleReducer,\r\n    \r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    scheduleCreate: scheduleCreateReducer,\r\n    scheduleDetails: scheduleDetailsReducer,\r\n    scheduleListMy: scheduleListMyReducer,\r\n    scheduleList: scheduleListReducer,\r\n    scheduleAttend: scheduleAttendReducer,\r\n})\r\n\r\nconst scheduledLecturesFromStorage = localStorage.getItem('scheduledLectures') ?\r\n    JSON.parse(localStorage.getItem('scheduledLectures')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst attendancePreferenceFromStorage = localStorage.getItem('attendancePreference') ?\r\n    JSON.parse(localStorage.getItem('attendancePreference')) : {}\r\n\r\nconst initialState = {\r\n    schedule: { \r\n        scheduledLectures: scheduledLecturesFromStorage,\r\n        attendancePreference: attendancePreferenceFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n    COURSE_LIST_REQUEST, \r\n    COURSE_LIST_SUCCESS, \r\n    COURSE_LIST_FAIL,\r\n\r\n    COURSE_DETAILS_REQUEST, \r\n    COURSE_DETAILS_SUCCESS, \r\n    COURSE_DETAILS_FAIL,  \r\n\r\n    COURSE_DELETE_REQUEST, \r\n    COURSE_DELETE_SUCCESS, \r\n    COURSE_DELETE_FAIL, \r\n\r\n    COURSE_CREATE_REQUEST, \r\n    COURSE_CREATE_SUCCESS, \r\n    COURSE_CREATE_FAIL,\r\n    COURSE_CREATE_RESET,\r\n\r\n    COURSE_UPDATE_REQUEST, \r\n    COURSE_UPDATE_SUCCESS, \r\n    COURSE_UPDATE_FAIL,\r\n    COURSE_UPDATE_RESET,\r\n\r\n    COURSE_CREATE_COMMENT_REQUEST, \r\n    COURSE_CREATE_COMMENT_SUCCESS, \r\n    COURSE_CREATE_COMMENT_FAIL,\r\n    COURSE_CREATE_COMMENT_RESET,\r\n\r\n    COURSE_TOP_REQUEST, \r\n    COURSE_TOP_SUCCESS, \r\n    COURSE_TOP_FAIL,\r\n} from '../constants/courseConstants'\r\n\r\nexport const courseListReducer = (state = {courses:[]}, action) => {\r\n    switch(action.type){\r\n        case COURSE_LIST_REQUEST:\r\n            return {loading: true, courses:[]}\r\n\r\n        case COURSE_LIST_SUCCESS:\r\n            return {loading: false, courses:action.payload}\r\n        \r\n        case COURSE_LIST_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const courseDetailsReducer = (state = {course:{comments:[]}}, action) => {\r\n    switch(action.type){\r\n        case COURSE_DETAILS_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n        case COURSE_DETAILS_SUCCESS:\r\n            return {loading: false, course:action.payload}\r\n        \r\n        case COURSE_DETAILS_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const courseDeleteReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case COURSE_DELETE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case COURSE_DELETE_SUCCESS:\r\n            return {loading: false, success:true}\r\n        \r\n        case COURSE_DELETE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const courseCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case COURSE_CREATE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case COURSE_CREATE_SUCCESS:\r\n            return {loading: false, success:true, course:action.payload}\r\n        \r\n        case COURSE_CREATE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        case COURSE_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const courseUpdateReducer = (state = {course:{}}, action) => {\r\n    switch(action.type){\r\n        case COURSE_UPDATE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case COURSE_UPDATE_SUCCESS:\r\n            return {loading: false, success:true, course:action.payload}\r\n        \r\n        case COURSE_UPDATE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        case COURSE_UPDATE_RESET:\r\n            return {course:{}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const courseCommentCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case COURSE_CREATE_COMMENT_REQUEST:\r\n            return {loading: true}\r\n\r\n        case COURSE_CREATE_COMMENT_SUCCESS:\r\n            return {loading: false, success:true}\r\n        \r\n        case COURSE_CREATE_COMMENT_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        case COURSE_CREATE_COMMENT_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const courseTopOnesReducer = (state = {courses:[]}, action) => {\r\n    switch(action.type){\r\n        case COURSE_TOP_REQUEST:\r\n            return {loading: true, courses: []}\r\n\r\n        case COURSE_TOP_SUCCESS:\r\n            return {loading: false, courses:action.payload}\r\n        \r\n        case COURSE_TOP_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo:action.payload}\r\n        \r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo:action.payload}\r\n        \r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {}}, action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true}\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user:action.payload}\r\n        \r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        case USER_DETAILS_RESET:\r\n            return {user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { user: {}}, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success:true, userInfo: action.payload}\r\n        \r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: []}, action) => {\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload}\r\n        \r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        case USER_LIST_RESET:\r\n            return { users:[]}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        \r\n        case USER_DELETE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        \r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error:action.payload}\r\n        \r\n        case USER_UPDATE_RESET:\r\n            return {user:{}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { SCHEDULE_ADD_LECTURE, SCHEDULE_REMOVE_LECTURE, SCHEDULE_SAVE_ATTENDANCE_PREFERENCE, SCHEDULE_CLEAR_LECTURES } from '../constants/scheduleConstants'\r\n\r\nexport const scheduleReducer = (state = { scheduledLectures: [], attendancePreference: {} }, action) => {\r\n    switch(action.type){\r\n        case SCHEDULE_ADD_LECTURE:\r\n            const lecture = action.payload\r\n            const existLecture = state.scheduledLectures.find(x => x.course === lecture.course)\r\n\r\n            if(existLecture){\r\n                return {\r\n                    ...state,\r\n                    scheduledLectures: state.scheduledLectures.map(x => \r\n                        x.course === existLecture.course ? lecture : x)\r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state,\r\n                    scheduledLectures: [...state.scheduledLectures, lecture]\r\n                }\r\n            }\r\n        \r\n        case SCHEDULE_REMOVE_LECTURE:\r\n            return{\r\n                ...state,\r\n                scheduledLectures: state.scheduledLectures.filter(x => x.course !== action.payload)\r\n            }\r\n        case SCHEDULE_SAVE_ATTENDANCE_PREFERENCE:\r\n            return{\r\n                ...state,\r\n                attendancePreference: action.payload\r\n            }\r\n        case SCHEDULE_CLEAR_LECTURES:\r\n            return{\r\n                ...state,\r\n                scheduledLectures: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    SCHEDULE_CREATE_REQUEST, \r\n    SCHEDULE_CREATE_SUCCESS, \r\n    SCHEDULE_CREATE_FAIL,\r\n    SCHEDULE_CREATE_RESET,\r\n\r\n    SCHEDULE_DETAILS_REQUEST,\r\n    SCHEDULE_DETAILS_SUCCESS,\r\n    SCHEDULE_DETAILS_FAIL,\r\n\r\n    SCHEDULE_LIST_MY_REQUEST, \r\n    SCHEDULE_LIST_MY_SUCCESS, \r\n    SCHEDULE_LIST_MY_FAIL,\r\n    SCHEDULE_LIST_MY_RESET,\r\n\r\n    SCHEDULE_LIST_REQUEST, \r\n    SCHEDULE_LIST_SUCCESS, \r\n    SCHEDULE_LIST_FAIL,\r\n\r\n    SCHEDULE_ATTEND_REQUEST, \r\n    SCHEDULE_ATTEND_SUCCESS, \r\n    SCHEDULE_ATTEND_FAIL,\r\n    SCHEDULE_ATTEND_RESET,\r\n} from '../constants/scheduleConstants'\r\n\r\nexport const scheduleCreateReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case SCHEDULE_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case SCHEDULE_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                myschedule: action.payload\r\n            }\r\n        case SCHEDULE_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case SCHEDULE_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const scheduleDetailsReducer = (state={ loading: true, lectures:[], attendancePreference:{}}, action) => {\r\n    switch(action.type){\r\n        case SCHEDULE_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SCHEDULE_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                myschedule: action.payload\r\n            }\r\n        case SCHEDULE_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const scheduleListMyReducer = (state = { schedules: [] }, action) => {\r\n    switch (action.type) {\r\n        case SCHEDULE_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case SCHEDULE_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                schedules: action.payload\r\n            }\r\n\r\n        case SCHEDULE_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case SCHEDULE_LIST_MY_RESET:\r\n            return {\r\n                schedules: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const scheduleListReducer = (state = { schedules: [] }, action) => {\r\n    switch (action.type) {\r\n        case SCHEDULE_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case SCHEDULE_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                schedules: action.payload\r\n            }\r\n\r\n        case SCHEDULE_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const scheduleAttendReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SCHEDULE_ATTEND_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case SCHEDULE_ATTEND_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case SCHEDULE_ATTEND_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case SCHEDULE_ATTEND_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let navigate = useNavigate()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            navigate(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            navigate(window.location.pathname)\r\n        }\r\n    }\r\n    return (\r\n        <Form  onSubmit={submitHandler} className='d-flex'> \r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    \r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    \r\n} from '../constants/userConstants'\r\nimport { SCHEDULE_LIST_MY_RESET } from '../constants/scheduleConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            {'username':email, 'password': password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: SCHEDULE_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            {'name': name, 'email': email, 'password': password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            '/api/users/profile/update/',\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            '/api/users/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n//import { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n           <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <Link to='/' className='navbar-brand'>STUDIGY</Link>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                        <SearchBox />\r\n                        <Nav className=\"ms-auto\">\r\n                            {/* <Nav.Link href=\"/courses\"><i className=\"fas fa-book-open\"></i> Courses</Nav.Link> */}\r\n                            <Link to='/schedule' className='nav-link'><i className=\"fas fa-calendar\"></i> Schedule</Link>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <NavDropdown.Item>\r\n                                        <Link to='/profile' className='nav-link'>Profile</Link>\r\n                                    </NavDropdown.Item>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        <Link to='#' className='nav-link'>Logout</Link>\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ): (\r\n                                <Link to='/login' className='nav-link'><i className=\" fa fa-user\"></i> Login</Link>\r\n                            )}\r\n\r\n                            {/* <Nav.Link href=\"/login\"><i className=\" fa fa-user\"></i> Login</Nav.Link> */}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <NavDropdown.Item>\r\n                                        <Link to='/admin/userlist' className='nav-link'>Users</Link>\r\n                                    </NavDropdown.Item>\r\n                                    <NavDropdown.Item>\r\n                                        <Link to='/admin/courselist' className='nav-link'>Courses</Link>\r\n                                    </NavDropdown.Item>\r\n                                    <NavDropdown.Item>\r\n                                        <Link to='/admin/schedulelist' className='nav-link'>Schedules</Link>\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <Container> \r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; StuDigy</Col>    \r\n                </Row> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Difficulty({value, text, color}) {\r\n    return (\r\n        <div className=\"difficulty\">\r\n           <span>\r\n               <i style={{ color }} className={\r\n                value >= 1\r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n               }>\r\n               </i>\r\n           </span>\r\n           <span>\r\n               <i style={{ color }} className={\r\n                value >= 2\r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n               }>\r\n               </i>\r\n           </span>\r\n           <span>\r\n               <i style={{ color }} className={\r\n                value >= 3\r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n               }>\r\n               </i>\r\n           </span>\r\n           <span>\r\n               <i style={{ color }} className={\r\n                value >= 4\r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n               }>\r\n               </i>\r\n           </span>\r\n           <span>\r\n               <i style={{ color }} className={\r\n                value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n               }>\r\n               </i>\r\n           </span>\r\n           <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Difficulty\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Difficulty from './Difficulty'\r\nimport { Link } from 'react-router-dom'\r\nfunction Course({ course }) {\r\n    return (\r\n        <Card className=\"p-3 rounded h-100\">\r\n            <Link to={`/course/${course._id}`}>\r\n                <Card.Img src ={course.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link style={{textDecoration:'none'}} to={`/course/${course._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong className=\"text-uppercase\">{course.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Difficulty value={course.difficulty} text={`${course.numComments} comments`} color={'#fde825'} />\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h5\">\r\n                    {course.tutor}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Course\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nfunction Loader() {\r\n    return (\r\n        <Spinner \r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height:'100px',\r\n                width:'100px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n            \r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport { \r\n    COURSE_LIST_REQUEST, \r\n    COURSE_LIST_SUCCESS, \r\n    COURSE_LIST_FAIL,\r\n\r\n    COURSE_DETAILS_REQUEST, \r\n    COURSE_DETAILS_SUCCESS, \r\n    COURSE_DETAILS_FAIL,\r\n    \r\n    COURSE_DELETE_REQUEST, \r\n    COURSE_DELETE_SUCCESS, \r\n    COURSE_DELETE_FAIL,\r\n\r\n    COURSE_CREATE_REQUEST, \r\n    COURSE_CREATE_SUCCESS, \r\n    COURSE_CREATE_FAIL,\r\n\r\n    COURSE_UPDATE_REQUEST, \r\n    COURSE_UPDATE_SUCCESS, \r\n    COURSE_UPDATE_FAIL,\r\n\r\n    COURSE_CREATE_COMMENT_REQUEST, \r\n    COURSE_CREATE_COMMENT_SUCCESS, \r\n    COURSE_CREATE_COMMENT_FAIL,\r\n\r\n    COURSE_TOP_REQUEST, \r\n    COURSE_TOP_SUCCESS, \r\n    COURSE_TOP_FAIL,\r\n\r\n} from '../constants/courseConstants'\r\n\r\nexport const listCourses = (keyword= '') => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: COURSE_LIST_REQUEST})\r\n        const { data } = await axios.get(`/api/courses${keyword}`)\r\n        \r\n        dispatch({\r\n            type: COURSE_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: COURSE_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopCourses = () => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: COURSE_TOP_REQUEST})\r\n        const { data } = await axios.get(`/api/courses/top/`)\r\n        \r\n        dispatch({\r\n            type: COURSE_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: COURSE_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listCourseDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: COURSE_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/courses/${id}`)\r\n        \r\n        dispatch({\r\n            type: COURSE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: COURSE_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteCourse = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: COURSE_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.delete(\r\n            `/api/courses/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: COURSE_DELETE_SUCCESS,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: COURSE_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createCourse = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: COURSE_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            `/api/courses/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: COURSE_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: COURSE_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCourse = (course) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: COURSE_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n            `/api/courses/update/${course._id}/`,\r\n            course,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: COURSE_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: COURSE_DETAILS_SUCCESS, \r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: COURSE_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createCourseComment = (courseId, comment) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: COURSE_CREATE_COMMENT_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            `/api/courses/${courseId}/comments/`,\r\n            comment,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: COURSE_CREATE_COMMENT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: COURSE_CREATE_COMMENT_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopCourses } from '../actions/courseActions'\r\n\r\nfunction CourseCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const courseTopOnes = useSelector(state => state.courseTopOnes)\r\n    const { error, loading, courses } = courseTopOnes\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopCourses())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-info'>\r\n                    {courses.map(course => (\r\n                        <Carousel.Item key={course._id}>\r\n                            <Link to={`/course/${course._id}`}>\r\n                                <Image src={course.image} alt={course.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{course.name} ( By {course.tutor} )</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default CourseCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useLocation } from 'react-router'\r\nimport Course from '../components/Course'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport CourseCarousel from '../components/CourseCarousel'\r\nimport { listCourses } from '../actions/courseActions'\r\n\r\nfunction HomeScreen() {\r\n    const dispatch = useDispatch()\r\n    const courseList = useSelector(state => state.courseList)\r\n    const { error, loading, courses} = courseList\r\n\r\n    const location = useLocation() \r\n    let keyword = location.search\r\n    console.log(keyword)\r\n    \r\n    useEffect(() => {\r\n        dispatch(listCourses(keyword))\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword &&  <CourseCarousel />}\r\n            <h1> Latest Courses</h1>\r\n            {loading ? <Loader /> \r\n                : error ? <Message variant='danger'>{ error }</Message>\r\n                    :\r\n                    <Row>\r\n                        {courses.map(course =>(\r\n                            <Col key={course._id} sm={12} md={6} lg={4} xl={3} style={{padding: \"12px 12px\"}}>\r\n                                <Course course = {course} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Difficulty from '../components/Difficulty'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listCourseDetails, createCourseComment } from '../actions/courseActions'\r\nimport { COURSE_CREATE_COMMENT_RESET } from '../constants/courseConstants'\r\n\r\nfunction CourseScreen() {\r\n    const [lecs, setLecs] = useState(1)\r\n    const [difficulty, setDifficulty] = useState(0)\r\n    const [content, setContent] = useState('')\r\n\r\n    const params = useParams()\r\n    const navigate = useNavigate()   \r\n    const dispatch = useDispatch()\r\n\r\n    const courseDetails = useSelector(state => state.courseDetails)\r\n    const { loading, error, course } = courseDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const courseCommentCreate = useSelector(state => state.courseCommentCreate)\r\n    const { \r\n        success: successCourseComment, \r\n        loading: loadingCourseComment, \r\n        error: errorCourseComment \r\n    } = courseCommentCreate\r\n\r\n    useEffect(() => {\r\n        if(successCourseComment){\r\n            setDifficulty(0)\r\n            setContent('')\r\n            dispatch({ type: COURSE_CREATE_COMMENT_RESET})\r\n        }\r\n        dispatch(listCourseDetails(params.id))\r\n    }, [params, dispatch, successCourseComment])\r\n    \r\n    const addToScheduleHandler = () => {\r\n        navigate(`/schedule/${params.id}?lecs=${lecs}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createCourseComment(\r\n            params.id, {\r\n                difficulty,\r\n                content,\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error \r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    :(\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={course.image} alt={course.name} />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3 className=\"text-uppercase\">{course.name}</h3>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Difficulty value={course.difficulty} text={`${course.numComments} comments`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Tutor: {course.tutor}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Description: {course.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Tutor: </Col>\r\n                                                    <Col>\r\n                                                        <strong>{course.tutor}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status: </Col>\r\n                                                    <Col>\r\n                                                        {course.lecturesScheduled > 0 ? 'Lectures Scheduled' : 'No upcoming Lectures'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            {course.lecturesScheduled > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col> Lecture No. </Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={lecs}\r\n                                                                onChange={(e) => setLecs(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n                                                                    [...Array(course.lecturesScheduled).keys()].map((x) => (\r\n                                                                        <option key={x+1} value={x+1}>\r\n                                                                            {x+1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n                                            <ListGroup.Item >\r\n                                                <Row>\r\n                                                    <Button \r\n                                                        onClick={ addToScheduleHandler }\r\n                                                        className='btn btn-block align-items-center' \r\n                                                        disabled={course.lecturesScheduled === 0} \r\n                                                        type='button'>\r\n                                                        Add to Schedule\r\n                                                    </Button>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Disscusion Forum</h4>\r\n                                    {course.comments.length === 0 && \r\n                                    <Message variant='info'>No posts</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {course.comments.map((comment) => (\r\n                                            <ListGroup.Item key={comment._id}>\r\n                                                <strong>{comment.name}</strong>\r\n                                                <Difficulty value={comment.difficulty} color='#f8e825'/>\r\n                                                <p>{comment.createdAt.substring(0, 10)}</p>\r\n                                                <p>{comment.content}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Post a Comment/ Ask a Doubt</h4>\r\n\r\n                                            {loadingCourseComment && <Loader />}\r\n                                            {successCourseComment && <Message variant='success'>Post Submitted</Message>}\r\n                                            {errorCourseComment && <Message variant='danger'>{errorCourseComment}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='difficulty' className='mb-3'>\r\n                                                        <Form.Label>Difficulty</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={difficulty}\r\n                                                            onChange={(e) => setDifficulty(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Piece of Cake</option>\r\n                                                            <option value='2'>2 - Easy</option>\r\n                                                            <option value='3'>3 - Moderate</option>\r\n                                                            <option value='4'>4 - Hard</option>\r\n                                                            <option value='5'>5 - Insane</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='content' className='mb-3'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={content}\r\n                                                            onChange={(e) => setContent(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingCourseComment}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to post a comment</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children}) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen() {\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const [email, setEmail ] = useState('')\r\n    const [password, setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            //history.push(redirect)\r\n            navigate(redirect)\r\n        }\r\n    }, [ navigate, userInfo, redirect])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            { loading && <Loader />}\r\n            <Form onSubmit={ submitHandler }>\r\n                <Form.Group controlId='email' className='mb-3'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password' className='mb-3'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Don't have an account? <Link\r\n                    style={{textDecoration:'none'}}\r\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                    Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen() {\r\n    const location = useLocation(); \r\n    const navigate = useNavigate();\r\n\r\n    const [name, setName ] = useState('')\r\n    const [email, setEmail ] = useState('')\r\n    const [password, setPassword ] = useState('')\r\n    const [confirmPassword, setConfirmPassword ] = useState('')\r\n    const [message, setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            navigate(redirect)\r\n        }\r\n    }, [ navigate, userInfo, redirect])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match!')\r\n        }\r\n        else{\r\n            dispatch(register(name, email, password))\r\n        } \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            { loading && <Loader />}\r\n            <Form onSubmit={ submitHandler }>\r\n                <Form.Group controlId='name' className='mb-3'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email' className='mb-3'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password' className='mb-3'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword' className='mb-3'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign Up</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                    Sign In\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMySchedules } from '../actions/scheduleCreateActions'\r\n\r\nfunction ProfileScreen() {\r\n    const navigate = useNavigate();\r\n\r\n    const [name, setName ] = useState('')\r\n    const [email, setEmail ] = useState('')\r\n    const [password, setPassword ] = useState('')\r\n    const [confirmPassword, setConfirmPassword ] = useState('')\r\n    const [message, setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const scheduleListMy = useSelector(state => state.scheduleListMy)\r\n    const { loading:loadingSchedules, error:errorSchedules, schedules } = scheduleListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            navigate('/login')\r\n        }\r\n        else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMySchedules())\r\n            }\r\n            else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [ dispatch, navigate, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match!')\r\n        }\r\n        else{\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n        } \r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md ={3}>\r\n                <h2> Student Profile </h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                { loading && <Loader />}\r\n                <Form onSubmit={ submitHandler }>\r\n                    <Form.Group controlId='name' className='mb-3'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e)=>setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email' className='mb-3'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e)=>setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password' className='mb-3'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e)=>setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword' className='mb-3'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md ={9}>\r\n                <h2> My Schedule </h2>\r\n                {loadingSchedules ? (\r\n                    <Loader />\r\n                ): errorSchedules ? (\r\n                        <Message variant='danger'>{errorSchedules}</Message>\r\n                ):(\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Lectures</th>\r\n                                <th>Attended</th>\r\n                                <th>Details</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {schedules.map(schedule => (\r\n                                <tr key={schedule._id}>\r\n                                    <td>{schedule._id}</td>\r\n                                    <td>{schedule.createdAt.substring(0,10)}</td>\r\n                                    <td>lectures here</td>\r\n                                    <td>{schedule.isAttended ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                            ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link to={`/myschedule/${schedule._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { \r\n    SCHEDULE_CREATE_REQUEST, \r\n    SCHEDULE_CREATE_SUCCESS, \r\n    SCHEDULE_CREATE_FAIL,\r\n\r\n    SCHEDULE_CLEAR_LECTURES,\r\n\r\n    SCHEDULE_DETAILS_REQUEST,\r\n    SCHEDULE_DETAILS_SUCCESS,\r\n    SCHEDULE_DETAILS_FAIL,\r\n\r\n    SCHEDULE_LIST_MY_REQUEST, \r\n    SCHEDULE_LIST_MY_SUCCESS, \r\n    SCHEDULE_LIST_MY_FAIL,\r\n\r\n    SCHEDULE_LIST_REQUEST, \r\n    SCHEDULE_LIST_SUCCESS, \r\n    SCHEDULE_LIST_FAIL,\r\n\r\n    SCHEDULE_ATTEND_REQUEST, \r\n    SCHEDULE_ATTEND_SUCCESS, \r\n    SCHEDULE_ATTEND_FAIL,\r\n    SCHEDULE_ATTEND_RESET,\r\n} from '../constants/scheduleConstants'\r\n\r\nexport const createSchedule = (schedule) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: SCHEDULE_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n            '/api/schedules/add/',\r\n            schedule,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: SCHEDULE_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type: SCHEDULE_CLEAR_LECTURES,\r\n            payload:data\r\n        })\r\n        \r\n        localStorage.removeItem('scheduledLectures')\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: SCHEDULE_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getScheduleDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: SCHEDULE_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/schedules/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: SCHEDULE_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: SCHEDULE_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMySchedules = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: SCHEDULE_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/schedules/myschedules/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: SCHEDULE_LIST_MY_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: SCHEDULE_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listSchedules = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: SCHEDULE_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n            `/api/schedules/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: SCHEDULE_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: SCHEDULE_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const attendSchedule = (schedule) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SCHEDULE_ATTEND_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/schedules/${schedule._id}/attend/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: SCHEDULE_ATTEND_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SCHEDULE_ATTEND_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import axios from 'axios'\r\nimport { SCHEDULE_ADD_LECTURE, SCHEDULE_REMOVE_LECTURE, SCHEDULE_SAVE_ATTENDANCE_PREFERENCE } from '../constants/scheduleConstants'\r\n\r\nexport const addToSchedule = (id, lecs) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/courses/${id}`)\r\n\r\n    dispatch({\r\n        type: SCHEDULE_ADD_LECTURE,\r\n        payload: {\r\n            course:data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            tutor: data.tutor,\r\n            lecturesScheduled: data.lecturesScheduled,\r\n            lecs\r\n        }\r\n    })\r\n    localStorage.setItem('scheduledLectures', JSON.stringify(getState().schedule.scheduledLectures))\r\n}\r\n\r\nexport const removeFromSchedule = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: SCHEDULE_REMOVE_LECTURE,\r\n        payload: id\r\n    })\r\n    localStorage.setItem('scheduledLectures', JSON.stringify(getState().schedule.scheduledLectures))\r\n}\r\n\r\nexport const saveAttendancePreference = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: SCHEDULE_SAVE_ATTENDANCE_PREFERENCE,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('attendancePreference', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams, useLocation, useNavigate } from 'react-router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Message  from '../components/Message'\r\nimport { addToSchedule, removeFromSchedule } from '../actions/scheduleActions'\r\n\r\nfunction ScheduleScreen() {\r\n    const params = useParams()\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n    const courseId = params.id\r\n    const lecs = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const schedule = useSelector(state => state.schedule)\r\n    const { scheduledLectures } = schedule\r\n    console.log('scheduledLectures:', scheduledLectures)\r\n\r\n    useEffect(() => {\r\n        if(courseId){\r\n            dispatch(addToSchedule(courseId, lecs))\r\n        }\r\n    }, [dispatch, courseId, lecs])\r\n\r\n    const removeFromScheduleHandler = (id) => {\r\n        dispatch(removeFromSchedule(id))\r\n    }\r\n    const attendanceHandler = () => {\r\n        navigate('/login?redirect=attendance')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1> My Schedule</h1>\r\n                {scheduledLectures.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        You have no lectures on your Schedule.  <Link to='/'>   Go Back</Link>\r\n                    </Message>\r\n                ): (\r\n                    <ListGroup variant='flush'>\r\n                        {scheduledLectures.map(lec => (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={lec.image} alt={lec.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link style={{textDecoration:'none'}} to={`/course/${lec.course}`}>{lec.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        {lec.tutor}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={lec.lecs}\r\n                                            onChange={(e) => dispatch(addToSchedule(lec.course, e.target.value))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(lec.lecturesScheduled).keys()].map((x) => (\r\n                                                    <option key={x+1} value={x+1}>\r\n                                                        {x+1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromScheduleHandler(lec.course)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <h2>Dates</h2>\r\n                        Offline Available\r\n                    </ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled = {scheduledLectures.length === 0}\r\n                            onClick = {attendanceHandler}\r\n                        >\r\n                            Fill Attendance Preference\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ScheduleScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SchedulingSteps({ step1, step2, step3}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <Link to='/login' className='nav-link'>Login</Link>\r\n                ): (\r\n                    <Link to='/login' className='nav-link disabled'>Login</Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <Link to='/login/attendance' className='nav-link'>Attendance</Link>\r\n                ): (\r\n                    <Link to='/login/attendance' className='nav-link disabled'>Attendance</Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <Link to='/confirmation' className='nav-link'>Confirmation</Link>\r\n                ): (\r\n                    <Link to='/confirmation' className='nav-link disabled'>Confirmation</Link>\r\n                 )}\r\n                \r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default SchedulingSteps\r\n","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport SchedulingSteps from '../components/SchedulingSteps'\r\nimport { saveAttendancePreference } from '../actions/scheduleActions'\r\n\r\nfunction AttendanceScreen() {\r\n    const navigate = useNavigate();\r\n\r\n    const schedule = useSelector(state => state.schedule)\r\n    const { attendancePreference } = schedule\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [attendOffline, setattendOffline ] = useState(attendancePreference.attendOffline)\r\n    const [partiallyVaccinated, setpartiallyVaccinated ] = useState(attendancePreference.partiallyVaccinated)\r\n    const [firstDoseAt, setfirstDoseAt ] = useState(attendancePreference.firstDoseAt)\r\n    const [fullyVaccinated, setfullyVaccinated ] = useState(attendancePreference.fullyVaccinated)\r\n    const [secondDoseAt, setsecondDoseAt ] = useState(attendancePreference.secondDoseAt)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveAttendancePreference({attendOffline, partiallyVaccinated, firstDoseAt, fullyVaccinated, secondDoseAt}))\r\n        navigate('/confirmation')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <SchedulingSteps step1 step2/>\r\n            <h1>Attendance Preference</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Label>Attendance Mode</Form.Label>\r\n                <div key={`inline-radio-mode`} className=\"mb-3\">\r\n                    <Form.Check\r\n                        inline\r\n                        required\r\n                        label=\"Online\"\r\n                        name=\"mode\"\r\n                        type='radio'\r\n                        id={`inline-radio-1`}\r\n                        checked = { !attendOffline }\r\n                        onChange={()=>setattendOffline(false)}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        required\r\n                        label=\"Offline\"\r\n                        name=\"mode\"\r\n                        type='radio'\r\n                        id={`inline-radio-2`}\r\n                        checked = { attendOffline }\r\n                        onChange={()=>setattendOffline(true)}\r\n                    />\r\n                </div>\r\n\r\n                <Form.Label>Vaccination Status</Form.Label>\r\n                <div key={`inline-radio-status`} className=\"mb-3\">\r\n                    <Form.Check\r\n                        inline\r\n                        required\r\n                        label=\"Not Vaccinated\"\r\n                        name=\"status\"\r\n                        type='radio'\r\n                        id={`inline-radio-1`}\r\n                        checked= { !partiallyVaccinated && !fullyVaccinated} \r\n                        onChange={()=>{\r\n                            setpartiallyVaccinated(false)\r\n                            setfullyVaccinated(false)\r\n                        }}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        required\r\n                        label=\"Partially Vaccinated\"\r\n                        name=\"status\"\r\n                        type='radio'\r\n                        id={`inline-radio-1`}\r\n                        checked= { partiallyVaccinated && !fullyVaccinated} \r\n                        onChange={()=>{\r\n                            setpartiallyVaccinated(true)\r\n                            setfullyVaccinated(false)\r\n                        }}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        required\r\n                        label=\"Fully Vaccinated\"\r\n                        name=\"status\"\r\n                        type='radio'\r\n                        id={`inline-radio-2`}\r\n                        checked= { fullyVaccinated} \r\n                        onChange={()=>{\r\n                            setpartiallyVaccinated(true)\r\n                            setfullyVaccinated(true)\r\n                        }}\r\n                    />\r\n                </div>\r\n                \r\n                { partiallyVaccinated && \r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <Form.Group controlId=\"firstDoseAt\">\r\n                            <Form.Label>Dose 1 Date</Form.Label>\r\n                            <Form.Control \r\n                                type=\"date\" \r\n                                required\r\n                                name=\"firstDoseAt\" \r\n                                placeholder=\"First Dose Date\" \r\n                                value={firstDoseAt}\r\n                                onChange={(e) => setfirstDoseAt(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n                }\r\n\r\n                { fullyVaccinated && \r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <Form.Group controlId=\"secondDoseAt\">\r\n                            <Form.Label>Dose 2 Date</Form.Label>\r\n                            <Form.Control \r\n                                type=\"date\" \r\n                                required\r\n                                name=\"secondDoseAt\" \r\n                                placeholder=\"Second Dose Date\" \r\n                                value={secondDoseAt}\r\n                                onChange={(e) => setsecondDoseAt(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n                }\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default AttendanceScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport SchedulingSteps from '../components/SchedulingSteps'\r\nimport { createSchedule } from '../actions/scheduleCreateActions'\r\nimport { SCHEDULE_CREATE_RESET } from '../constants/scheduleConstants'\r\n\r\nfunction ConfirmationScreen() {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const scheduleCreate = useSelector(state => state.scheduleCreate)\r\n    const {myschedule, error, success} = scheduleCreate\r\n\r\n    const schedule = useSelector(state => state.schedule)\r\n\r\n    if (schedule.attendancePreference.fullyVaccinated && \r\n        (!schedule.attendancePreference.firstDoseAt || \r\n            !schedule.attendancePreference.secondDoseAt)) {\r\n        navigate('/login/attendance')\r\n    }\r\n    if (schedule.attendancePreference.partiallyVaccinated && \r\n        !schedule.attendancePreference.firstDoseAt) {\r\n        navigate('/login/attendance')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            navigate(`/myschedule/${myschedule._id}`)\r\n            dispatch({ type:SCHEDULE_CREATE_RESET })\r\n        }\r\n    }, [success, dispatch, navigate, myschedule])\r\n\r\n    const confirm = () => {\r\n        dispatch(createSchedule({\r\n            lectures: schedule.scheduledLectures,\r\n            attendancePreference: schedule.attendancePreference,\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <SchedulingSteps step1 step2 step3/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <h2>Scheduled Lectures</h2>\r\n                        {schedule.scheduledLectures.length === 0 ? \r\n                        <Message variant='info'>\r\n                            You have not added any lectures to your Schedule\r\n                        </Message>:(\r\n                            <ListGroup variant='flush'>\r\n                                {schedule.scheduledLectures.map((lec, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={2}>\r\n                                                <Image src={lec.image} alt={lec.name} fluid rounded/>\r\n                                            </Col>\r\n                                            <Col md={3}>\r\n                                                <Link style={{textDecoration:'none'}} to={`/course/${lec.course}`}>{lec.name}</Link>\r\n                                            </Col>\r\n                                            <Col md={2}>\r\n                                                {lec.tutor}\r\n                                            </Col>\r\n                                            <Col md={2}>\r\n                                                lec no{/* add lec no here */}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <ListGroup variant='flush'>\r\n                        <h2>Attendance Preference</h2>\r\n                        <p>  \r\n                            {schedule.attendancePreference.attendOffline && <strong>Attending Offline</strong> }\r\n                            {!schedule.attendancePreference.attendOffline && <strong>Attending Online</strong>}\r\n                        </p>\r\n                    </ListGroup>\r\n                    <ListGroup variant='flush'>\r\n                        <h2>Vaccination Status</h2>\r\n                        <div>  \r\n                            {schedule.attendancePreference.fullyVaccinated && (\r\n                                <div>\r\n                                    <ListGroup.Item>\r\n                                        <strong>Fully Vaccinated</strong>{' '}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>First Dose: </Col>\r\n                                            <Col>\r\n                                                <strong>{schedule.attendancePreference.firstDoseAt}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Second Dose: </Col>\r\n                                            <Col>\r\n                                                <strong>{schedule.attendancePreference.secondDoseAt}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {schedule.attendancePreference.partiallyVaccinated && \r\n                            !schedule.attendancePreference.fullyVaccinated && (\r\n                                <div>\r\n                                    <ListGroup.Item>\r\n                                        <strong>Partially Vaccinated</strong>{' '}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>First Dose: </Col>\r\n                                            <Col>\r\n                                                <strong>{schedule.attendancePreference.firstDoseAt}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {!schedule.attendancePreference.partiallyVaccinated && \r\n                            !schedule.attendancePreference.fullyVaccinated && (\r\n                                <div>\r\n                                    <ListGroup.Item>\r\n                                        <strong>Not Vaccinated</strong>{' '}\r\n                                    </ListGroup.Item>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </ListGroup>\r\n                    <ListGroup variant='flush'>\r\n\r\n                        <ListGroup.Item className='align-center'>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className='align-center'>\r\n                            <Col md={3}>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block my-3 align-center'\r\n                                disabled={schedule.scheduledLectures ===0}\r\n                                onClick={confirm}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                            </Col>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmationScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getScheduleDetails, attendSchedule } from '../actions/scheduleCreateActions'\r\nimport { SCHEDULE_ATTEND_RESET } from '../constants/scheduleConstants'\r\n\r\nfunction ScheduleDetailsScreen() {\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    const scheduleId = params.id\r\n\r\n    const scheduleDetails= useSelector(state => state.scheduleDetails)\r\n    const {myschedule, error, loading} = scheduleDetails\r\n\r\n    const scheduleAttend= useSelector(state => state.scheduleAttend)\r\n    const {loading:loadingAttend, success:successAttend} = scheduleAttend\r\n\r\n    const userLogin= useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            navigate('/login')\r\n        }\r\n        if(!myschedule || myschedule._id!== Number(scheduleId) || successAttend ){\r\n            dispatch({ type: SCHEDULE_ATTEND_RESET })\r\n            dispatch(getScheduleDetails(scheduleId))\r\n        }\r\n    }, [myschedule, scheduleId, dispatch, successAttend, navigate, userInfo])\r\n\r\n    const attendHandler = () => {\r\n        dispatch(attendSchedule(myschedule))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n                <div>\r\n                    <h1> Schedule: {myschedule._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <h2>Scheduled Lectures</h2>\r\n                                {myschedule.isOutdated ? (\r\n                                    <Message variant='warning'> Is Outdated </Message>\r\n                                ):(\r\n                                    <Message variant='success'> In Progress </Message>\r\n                                )}\r\n                                {myschedule.lectures.length === 0 ? \r\n                                <Message variant='info'>\r\n                                    No lectures on your Schedule\r\n                                </Message>:(\r\n                                    <ListGroup variant='flush'>\r\n                                        {myschedule.lectures.map((lec, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={2}>\r\n                                                        <Image src={lec.image} alt={lec.name} fluid rounded/>\r\n                                                    </Col>\r\n                                                    <Col md={3}>\r\n                                                        <Link style={{textDecoration:'none'}} to={`/course/${lec.course}`}>{lec.name}</Link>\r\n                                                    </Col>\r\n                                                    <Col md={2}>\r\n                                                        {lec.tutor}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <ListGroup variant='flush'>\r\n                                <h2>Student Details</h2>\r\n                                <p><strong>Name: </strong>{myschedule.user.name}</p>\r\n                                <p><strong>Email: </strong><a href={`mailto:${myschedule.user.email}`}>{myschedule.user.email}</a></p>\r\n                            </ListGroup>\r\n                            <ListGroup variant='flush'>\r\n                                <h2>Attendance Preference</h2>\r\n                                <p>  \r\n                                    {myschedule.attendancePreference.attendOffline && <strong>Attending Offline</strong> }\r\n                                    {!myschedule.attendancePreference.attendOffline && <strong>Attending Online</strong>}\r\n                                </p>\r\n                                {myschedule.isAttended ? (\r\n                                    <Message variant='success'> Attended </Message>\r\n                                ):(\r\n                                    <Message variant='warning'> Not Attended </Message>\r\n                                )}\r\n                            </ListGroup>\r\n                            {loadingAttend && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && !myschedule.isAttended && (\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn btn-block'\r\n                                        onClick={attendHandler}\r\n                                    >\r\n                                        Mark As Attended\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            <ListGroup variant='flush'>\r\n                                <h2>Vaccination Status</h2>\r\n                                <div>  \r\n                                    {myschedule.attendancePreference.fullyVaccinated && (\r\n                                        <div>\r\n                                            <ListGroup.Item>\r\n                                                <strong>Fully Vaccinated</strong>{' '}\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>First Dose: </Col>\r\n                                                    <Col>\r\n                                                        <strong>{myschedule.attendancePreference.firstDoseAt}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Second Dose: </Col>\r\n                                                    <Col>\r\n                                                        <strong>{myschedule.attendancePreference.secondDoseAt}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        </div>\r\n                                    )}\r\n                                    \r\n                                    {myschedule.attendancePreference.partiallyVaccinated && \r\n                                    !myschedule.attendancePreference.fullyVaccinated && (\r\n                                        <div>\r\n                                            <ListGroup.Item>\r\n                                                <strong>Partially Vaccinated</strong>{' '}\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>First Dose: </Col>\r\n                                                    <Col>\r\n                                                        <strong>{myschedule.attendancePreference.firstDoseAt}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        </div>\r\n                                    )}\r\n                                    \r\n                                    {!myschedule.attendancePreference.partiallyVaccinated && \r\n                                    !myschedule.attendancePreference.fullyVaccinated && (\r\n                                        <div>\r\n                                            <ListGroup.Item>\r\n                                                <strong>Not Vaccinated</strong>{' '}\r\n                                            </ListGroup.Item>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default ScheduleDetailsScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen() {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success:successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin ){\r\n            dispatch(listUsers())\r\n        }\r\n        else{\r\n            navigate('/login')\r\n        }\r\n    }, [dispatch, userInfo, navigate, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this User'))\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Students</h1>\r\n            {loading \r\n                ? (<Loader />)\r\n                : error \r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :(\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                                ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n                                        <td>\r\n                                            <Link to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link>\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>     \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen() {\r\n    const navigate = useNavigate()\r\n    const params = useParams()\r\n\r\n    const userId = params.id\r\n\r\n    const [name, setName ] = useState('')\r\n    const [email, setEmail ] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error:errorUpdate, loading:loadingUpdate, success:successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            navigate('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [ dispatch, user, userId, navigate, successUpdate ])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                \r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> \r\n                :(\r\n                    <Form onSubmit={ submitHandler }>\r\n                        <Form.Group controlId='name' className='mb-3'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e)=>setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email' className='mb-3'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={(e)=>setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isAdmin' className='mb-3'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e)=>setIsAdmin(e.target.checked)}\r\n                            >\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listCourses, deleteCourse, createCourse } from '../actions/courseActions'\r\nimport { COURSE_CREATE_RESET } from '../constants/courseConstants'\r\n\r\nfunction CourseListScreen() {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const courseList = useSelector(state => state.courseList)\r\n    const { loading, error, courses } = courseList\r\n\r\n    const courseDelete = useSelector(state => state.courseDelete)\r\n    const { loading:loadingDelete, error:errorDelete, success:successDelete } = courseDelete\r\n\r\n    const courseCreate = useSelector(state => state.courseCreate)\r\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, course:createdCourse } = courseCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({type: COURSE_CREATE_RESET})\r\n\r\n        if(!userInfo.isAdmin ){\r\n            navigate('/login')\r\n        }\r\n        if(successCreate){\r\n            navigate(`/admin/course/${createdCourse._id}/edit`)\r\n        }\r\n        else{\r\n            dispatch(listCourses())\r\n        }\r\n    }, [dispatch, userInfo, navigate, successDelete, successCreate, createdCourse])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this Course')){\r\n            dispatch(deleteCourse(id))\r\n        }\r\n    }\r\n\r\n    const createCourseHandler = (course) => {\r\n        dispatch(createCourse())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col md={10}>\r\n                    <h1>Courses</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createCourseHandler}>\r\n                        <i className='fas fa-plus'></i>  Create Course\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            \r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading \r\n                ? (<Loader />)\r\n                : error \r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :(\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>TUTOR</th>\r\n                                    {/* <th>DESCRIPTION</th> */}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {courses.map(course => (\r\n                                    <tr key={course._id}>\r\n                                        <td>{course._id}</td>\r\n                                        <td>{course.name}</td>\r\n                                        <td>{course.tutor}</td>\r\n                                        {/* <td>{course.description}</td> */}\r\n                                        <td>\r\n                                            <Link to={`/admin/course/${course._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link>\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(course._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>     \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listCourseDetails, updateCourse } from '../actions/courseActions'\r\nimport { COURSE_UPDATE_RESET } from '../constants/courseConstants'\r\n\r\nfunction CourseEditScreen() {\r\n    const navigate = useNavigate()\r\n    const params = useParams()\r\n\r\n    const courseId = params.id\r\n\r\n    const [name, setName ] = useState('')\r\n    const [tutor, setTutor ] = useState('')\r\n    const [description, setDescription ] = useState('')\r\n    const [lecturesScheduled, setLecturesScheduled ] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [uploading, setUploading] =useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const courseDetails = useSelector(state => state.courseDetails)\r\n    const { error, loading, course } = courseDetails\r\n\r\n    const courseUpdate = useSelector(state => state.courseUpdate)\r\n    const { error:errorUpdate, loading:loadingUpdate, success:successUpdate } = courseUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: COURSE_UPDATE_RESET})\r\n            navigate('/admin/courselist')\r\n        }\r\n        else{\r\n            if(!course.name || course._id !== Number(courseId)){\r\n                dispatch(listCourseDetails(courseId))\r\n            }else{\r\n                setName(course.name)\r\n                setTutor(course.tutor)\r\n                setImage(course.image)\r\n                setDescription(course.description)\r\n                setLecturesScheduled(course.lecturesScheduled)\r\n            }\r\n        }\r\n        \r\n    }, [ dispatch, course, courseId, successUpdate, navigate ])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateCourse({\r\n            _id: courseId,\r\n            name, \r\n            tutor,\r\n            image,\r\n            description,\r\n            lecturesScheduled,\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('course_id', courseId)\r\n\r\n        setUploading(true)\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type':'multipart/form-data'\r\n                }\r\n            }\r\n            const {data} = await axios.post(`/api/courses/upload/`, formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/courselist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Course</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> \r\n                :(\r\n                    <Form onSubmit={ submitHandler }>\r\n                        <Form.Group controlId='name' className='mb-3'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e)=>setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='tutor' className='mb-3'>\r\n                            <Form.Label>Tutor</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Tutor'\r\n                                value={tutor}\r\n                                onChange={(e) => setTutor(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId='image' >\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='text'\r\n                                placeholder='Enter image'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <Form.Control\r\n                                    type='file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                            </Form.Control>\r\n                            {uploading && <Loader />}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='lecturesScheduled' className='mb-3'>\r\n                            <Form.Label>Lectures Scheduled</Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='number'\r\n                                placeholder='Enter stock'\r\n                                value={lecturesScheduled}\r\n                                onChange={(e) => setLecturesScheduled(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description' className='mb-3'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                as='textarea'\r\n                                row='5'\r\n                                placeholder='Enter description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listSchedules } from '../actions/scheduleCreateActions'\r\n\r\nfunction ScheduleListScreen() {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const scheduleList = useSelector(state => state.scheduleList)\r\n    const { loading, error, schedules } = scheduleList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin ){\r\n            dispatch(listSchedules())\r\n        }\r\n        else{\r\n            navigate('/login')\r\n        }\r\n    }, [dispatch, userInfo, navigate])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Schedules</h1>\r\n            {loading \r\n                ? (<Loader />)\r\n                : error \r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :(\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>STUDENT</th>\r\n                                    <th>DATE</th>\r\n                                    <th>ATTENDED</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {schedules.map(schedule => (\r\n                                    <tr key={schedule._id}>\r\n                                        <td>{schedule._id}</td>\r\n                                        <td>{schedule.user && schedule.user.name}</td>\r\n                                        <td>{schedule.createdAt.substring(0,10)}</td>\r\n                                        <td>{schedule.isAttended ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                                ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n                                        <td>\r\n                                            <Link to={`/myschedule/${schedule._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </Link>\r\n                                        </td>     \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScheduleListScreen\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport HomeScreen from './screens/HomeScreen'\nimport CourseScreen from './screens/CourseScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ScheduleScreen from './screens/ScheduleScreen'\nimport AttendanceScreen from './screens/AttendanceScreen'\nimport ConfirmationScreen from './screens/ConfirmationScreen'\nimport ScheduleDetailsScreen from './screens/ScheduleDetailsScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport CourseListScreen from './screens/CourseListScreen'\nimport CourseEditScreen from './screens/CourseEditScreen'\nimport ScheduleListScreen from './screens/ScheduleListScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container> \n          <Routes>\n            <Route path='/' element={<HomeScreen />} exact />\n            <Route path='/register' element={<RegisterScreen />} />\n            <Route path='/login' element={<LoginScreen />} />\n            <Route path='/profile' element={<ProfileScreen />} />\n            <Route path='/login/attendance' element={<AttendanceScreen />} />\n            <Route path='/confirmation' element={<ConfirmationScreen />} />\n            <Route path='/myschedule/:id' element={<ScheduleDetailsScreen />} />\n            <Route path='/course/:id' element={<CourseScreen />} />\n            <Route path='/schedule' element={<ScheduleScreen />} />\n            <Route path='/schedule/:id' element={<ScheduleScreen />} />\n\n            <Route path='/admin/userlist' element={<UserListScreen />} />\n            <Route path='/admin/user/:id/edit' element={<UserEditScreen />} />\n\n            <Route path='/admin/courselist' element={<CourseListScreen />} />\n            <Route path='/admin/course/:id/edit' element={<CourseEditScreen />} />\n\n            <Route path='/admin/schedulelist' element={<ScheduleListScreen />} />\n          </Routes>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}